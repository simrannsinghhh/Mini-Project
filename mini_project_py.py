# -*- coding: utf-8 -*-
"""Mini Project.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bQLCypMhmDWQtETlqlxPjv8OTn-xQ9Ln
"""

class Flower:
    def __init__(self, name, price, quantity):
        self.name = name
        self.price = price
        self.quantity = quantity

    def __str__(self):
        return f"{self.name} - Rs {self.price} per piece ({self.quantity} in stock)"


class Bouquet:
    def __init__(self, name):
        self.name = name
        self.contents = []

    def add_flower(self, flower, quantity):
        self.contents.append({"flower": flower, "quantity": quantity})

    def remove_flower(self, flower, quantity):
        for item in self.contents:
            if item["flower"] == flower:
                if item["quantity"] >= quantity:
                    item["quantity"] -= quantity
                else:
                    print("Not enough flowers in the bouquet.")
                break
        else:
            print("Flower not found in the bouquet.")

    def calculate_cost(self):
        total_cost = 0
        for item in self.contents:
            total_cost += item["quantity"] * item["flower"].price
        return total_cost

    def __str__(self):
        return f"{self.name} Bouquet - Contents: {self.contents}"


class FlowerShop:
    def __init__(self):
        self.flower_inventory = []

    def add_flower_to_inventory(self, flower):
        for item in self.flower_inventory:
            if item.name == flower.name:
                item.quantity += flower.quantity
                break
        else:
            self.flower_inventory.append(flower)

    def sell_bouquet(self, bouquet, quantity=1):
        for item in bouquet.contents:
            flower = item["flower"]
            flower_in_stock = None
            for stock_flower in self.flower_inventory:
                if stock_flower.name == flower.name:
                    flower_in_stock = stock_flower
                    break

            if flower_in_stock is None or flower_in_stock.quantity < item["quantity"] * quantity:
                print(f"Out of stock for {flower.name}. Please order more.")
                return

        for item in bouquet.contents:
            flower = item["flower"]
            flower_in_stock = None
            for stock_flower in self.flower_inventory:
                if stock_flower.name == flower.name:
                    flower_in_stock = stock_flower
                    break
            flower_in_stock.quantity -= item["quantity"] * quantity

        print(f"Sold {quantity} {bouquet.name} bouquets for Rs {bouquet.calculate_cost() * quantity}.")

    def display_inventory(self):
        print("Inventory:")
        for flower in self.flower_inventory:
            print(flower)


rose = Flower("Rose", 10, 50)
tulip = Flower("Tulip", 12, 40)
lilies = Flower("Lilies", 13, 20)
orchids = Flower("Orchids", 8, 10)

rose_bouquet = Bouquet("Rose")
rose_bouquet.add_flower(rose, 1)

tulip_bouquet = Bouquet("Tulip")
tulip_bouquet.add_flower(tulip, 1)

lilies_bouquet = Bouquet("Lilies")
lilies_bouquet.add_flower(lilies, 1)

orchids_bouquet = Bouquet("Orchids")
orchids_bouquet.add_flower(orchids, 1)

flower_shop = FlowerShop()
flower_shop.add_flower_to_inventory(rose)
flower_shop.add_flower_to_inventory(tulip)
flower_shop.add_flower_to_inventory(lilies)
flower_shop.add_flower_to_inventory(orchids)

while True:
    print("\nOptions:")
    print("1. Display Inventory")
    print("2. Sell Bouquet")
    print("3. Quit")
    choice = input("Enter your choice: ")

    if choice == "1":
        flower_shop.display_inventory()
    elif choice == "2":
        bouquet_name = input("Enter the bouquet name (Rose/Tulip/Lilies/Orchids): ")
        quantity = int(input("Enter the quantity to sell: "))
        if bouquet_name == "Rose":
            flower_shop.sell_bouquet(rose_bouquet, quantity)
        elif bouquet_name == "Tulip":
            flower_shop.sell_bouquet(tulip_bouquet, quantity)
        elif bouquet_name == "Lilies":
            flower_shop.sell_bouquet(lilies_bouquet, quantity)
        elif bouquet_name == "Orchids":
            flower_shop.sell_bouquet(orchids_bouquet, quantity)
        else:
            print("Invalid bouquet name.")
    elif choice == "3":
        break
    else:
        print("Invalid choice. Please choose a valid option.")